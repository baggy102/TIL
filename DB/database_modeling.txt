DATABASE MODELING

데이터 모델링은 실제하는 사물이나 작업을 DMBS의 데이터베이스 개체로 옮기기 위한 과정이다.
정보시스템 구축의 대상이 되는 업무를 분석하고, 약속된 표기법에 따라 표현한다.
이렇게 분석된 모델을 통해 실제 데이터베이스를 생성하고 데이터관리에 사용된다.

방대하고 복잡한 데이터를 효과적으로 table에 담기 위해
데이터 모델링의 개념이 등장했다.

데이터 모델링의 이점

 - 데이터베이스 소프트웨어 개발 오류 감소
 - 데이터베이스 설계 및 생성 속도와 효율성 촉진
 - 조직 전체에서 데이터 문서화 및 시스템 설계의 일관성 조성
 - 팀 간의 커뮤니케이션 촉진

데이터모델링의 절차

 - 업무파악
 - 개념적 데이터 모델링
 - 논리적 데이터 모델링
 - 물리적 데이터 모델링


개념적 데이터 모델링
-> 업무파악 된 일의 데이터 간 관계를 구상하는 단계
   ERD를 사용 해 각 개체와 그들간의 관계를 나타낸다.

   Entity (개체)
   -> 관리하고자 하는 정보의 실체이며
      정의하고자 하는 사물 또는 개념을 의미한다.
      DB의 table로 사용된다.

   Attribute (엔티티 속성)
   -> Entity의 구성요소로써
      DB의 column으로 사용된다.

   Relation (관계)
   -> Entity 간의 관계(연관성)를 표현한 것.
      DB에서 PK, FK로 표현한다.


        Cardinality
        -> 각 Entity 간 관계에는 여러가지 형태가 존재하며
           이러한 관계의 형태를 나타낸 것이 Cardinality이다.

           - 1 : 1 관계
           - 1 : N 관계
           - N : M 관계 (다대다관계)

    ERD (Entity RElationship Diagram)
    -> 요구분석사항에서 얻은 엔티티와 속성들의 관계를 그림으로 표현한 것이다.

    피터 챈 표기법으로 ERD 구성 방법
    Entity는 사각형
    Attribute는 원형
    Relation은 마름모 꼴로 표기한다.

논리적 데이터 모델링
-> 개념적 데이터 모델이 완성된 이후, 구체화된 업무 중심의 데이터 모델을 만들어낸다.
   이 단계에서 식별된 데이터 개념과 데이터 간 관계에 대한 자세한 내용을 정의한다.

   - 다양한 속성의 데이터 유형
   - 데이터 엔티티 간의 관계
   - 데이터의 기본 속성 또는 키 필드
   - 정규화
   - 논리적 모델을 표현 하기 위해서 여러 데이터 모델링 시스템 중 하나를 따르며
      ERD를 테이블 형태로 재구성한다.

   Entity -> 테이블
   Attribute -> Column
      속성의 제약조건 ( PK 여부, unique, auto_increasement ... )에 맞게 만든다.
      이 과정을 column에 대한 도메인을 설정한다고 말한다.
   Relation -> PK, FK

   관계의 처리
   
   1 : 1 관계의 처리

   - PK와 FK를 표현한다.
   - 의존성을 파악하여 부모 - 자식 관계
   - 부모 테이블에 PK
   - 자식 테이블에 FK
   - Cadinality와 Optionality를 표현한다.

   1 : N 관계의 처리

   - PK와 FK를 표현해준다
   - 1에 해당하는 곳이 FK
   - N에 해당하는 테이블에 FK
   - Cadinality와 Optionality를 표현해준다.

   M : N 관계의 처리
   -> 데이터 모델링에서는 M:N 관계를 완성되지 않은 모델로 간주하여,
      1:N, N:1 로 조정하는 작업이 필요하다.
      따라서 두 엔티티의 관련성을 표현하기 위해서는 중간에 또 다른 엔티티(맵핑테이블)를 필요로 한다.

   - 맵핑테이블 제작(역할을 직관적으로 표현해준다)
   - 중첩되는 각 테이블의 FK를 하나씩 제작한다.
   - Cadinality와 Optionality를 표현해준다.
   




    



